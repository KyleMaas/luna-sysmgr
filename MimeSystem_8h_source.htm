<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>LunaSysMgr: MimeSystem.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('MimeSystem_8h_source.htm','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MimeSystem.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="MimeSystem_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/* @@@LICENSE</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">*      Copyright (c) 2009-2012 Hewlett-Packard Development Company, L.P.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">* you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">* You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">* See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* limitations under the License.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* LICENSE@@@ */</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#ifndef MIMESYSTEM_H_</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define MIMESYSTEM_H_</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;Common.h&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;Mutex.h&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="CmdResourceHandlers_8h.htm">CmdResourceHandlers.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="code" href="classMimeSystem.htm">   36</a></span>&#160;<span class="keyword">class </span><a class="code" href="classMimeSystem.htm">MimeSystem</a></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        </div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="code" href="classMimeSystem_1_1VerbInfo.htm">   40</a></span>&#160;        <span class="keyword">class </span><a class="code" href="classMimeSystem_1_1VerbInfo.htm">VerbInfo</a> {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="code" href="classMimeSystem_1_1VerbInfo.htm#a47e4ca083ab9bf6172029bad40646beb">   42</a></span>&#160;                <a class="code" href="classMimeSystem_1_1VerbInfo.htm#a67568f12166ce9854f4a5734504b69b5">VerbInfo</a>(<span class="keyword">const</span> std::string&amp; verb,<span class="keyword">const</span> std::string&amp; params,<span class="keyword">const</span> std::string handlerAppId, uint32_t handlerIndex) :</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                        <a class="code" href="classMimeSystem_1_1VerbInfo.htm#a5014e8689baccc72df35a66f6ec34ffb">m_verb</a>(verb) , <a class="code" href="classMimeSystem_1_1VerbInfo.htm#aab1a472a7b35e8c587df143088147e6b">m_params</a>(params) , <a class="code" href="classMimeSystem_1_1VerbInfo.htm#ae55e259f30ceec5a065173809567e185">m_handlerAppId</a>(handlerAppId) , <a class="code" href="classMimeSystem_1_1VerbInfo.htm#a0659dd500e764d3184d1408cc571b738">m_handlerIndex</a>(handlerIndex) , <a class="code" href="classMimeSystem_1_1VerbInfo.htm#ad4da58d78d87d858328d8d7816593374">m_valid</a>(true) {}</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="code" href="classMimeSystem_1_1VerbInfo.htm#a67568f12166ce9854f4a5734504b69b5">   44</a></span>&#160;                <a class="code" href="classMimeSystem_1_1VerbInfo.htm#a67568f12166ce9854f4a5734504b69b5">VerbInfo</a>() : <a class="code" href="classMimeSystem_1_1VerbInfo.htm#a5014e8689baccc72df35a66f6ec34ffb">m_verb</a>(<span class="stringliteral">&quot;&quot;</span>) , <a class="code" href="classMimeSystem_1_1VerbInfo.htm#aab1a472a7b35e8c587df143088147e6b">m_params</a>(<span class="stringliteral">&quot;&quot;</span>) , <a class="code" href="classMimeSystem_1_1VerbInfo.htm#ae55e259f30ceec5a065173809567e185">m_handlerAppId</a>(<span class="stringliteral">&quot;&quot;</span>) ,  <a class="code" href="classMimeSystem_1_1VerbInfo.htm#a0659dd500e764d3184d1408cc571b738">m_handlerIndex</a>(0) , <a class="code" href="classMimeSystem_1_1VerbInfo.htm#ad4da58d78d87d858328d8d7816593374">m_valid</a>(false) {}</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="code" href="classMimeSystem_1_1VerbInfo.htm#ac2000623dfe8539f9e2739fd3a5ec251">   45</a></span>&#160;                <a class="code" href="classMimeSystem_1_1VerbInfo.htm#ac2000623dfe8539f9e2739fd3a5ec251">VerbInfo</a>(<span class="keyword">const</span> <a class="code" href="classMimeSystem_1_1VerbInfo.htm">VerbInfo</a>&amp; c) {</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                        <a class="code" href="classMimeSystem_1_1VerbInfo.htm#ad4da58d78d87d858328d8d7816593374">m_valid</a> = c.<a class="code" href="classMimeSystem_1_1VerbInfo.htm#ad4da58d78d87d858328d8d7816593374">m_valid</a>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                        <a class="code" href="classMimeSystem_1_1VerbInfo.htm#ae55e259f30ceec5a065173809567e185">m_handlerAppId</a> = c.<a class="code" href="classMimeSystem_1_1VerbInfo.htm#ae55e259f30ceec5a065173809567e185">m_handlerAppId</a>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                        <a class="code" href="classMimeSystem_1_1VerbInfo.htm#a0659dd500e764d3184d1408cc571b738">m_handlerIndex</a> = c.<a class="code" href="classMimeSystem_1_1VerbInfo.htm#a0659dd500e764d3184d1408cc571b738">m_handlerIndex</a>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                        <a class="code" href="classMimeSystem_1_1VerbInfo.htm#a5014e8689baccc72df35a66f6ec34ffb">m_verb</a> = c.<a class="code" href="classMimeSystem_1_1VerbInfo.htm#a5014e8689baccc72df35a66f6ec34ffb">m_verb</a>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                        <a class="code" href="classMimeSystem_1_1VerbInfo.htm#aab1a472a7b35e8c587df143088147e6b">m_params</a> = c.<a class="code" href="classMimeSystem_1_1VerbInfo.htm#aab1a472a7b35e8c587df143088147e6b">m_params</a>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="code" href="classMimeSystem_1_1VerbInfo.htm#aafe9b306568ea8c00d8f457a681a6e96">   53</a></span>&#160;                <a class="code" href="classMimeSystem_1_1VerbInfo.htm">VerbInfo</a>&amp; <a class="code" href="classMimeSystem_1_1VerbInfo.htm#aafe9b306568ea8c00d8f457a681a6e96">operator=</a>(<span class="keyword">const</span> <a class="code" href="classMimeSystem_1_1VerbInfo.htm">VerbInfo</a>&amp; c) {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                        <span class="keywordflow">if</span> (&amp;c == <span class="keyword">this</span>)</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                        <a class="code" href="classMimeSystem_1_1VerbInfo.htm#ad4da58d78d87d858328d8d7816593374">m_valid</a> = c.<a class="code" href="classMimeSystem_1_1VerbInfo.htm#ad4da58d78d87d858328d8d7816593374">m_valid</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                        <a class="code" href="classMimeSystem_1_1VerbInfo.htm#ae55e259f30ceec5a065173809567e185">m_handlerAppId</a> = c.<a class="code" href="classMimeSystem_1_1VerbInfo.htm#ae55e259f30ceec5a065173809567e185">m_handlerAppId</a>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                        <a class="code" href="classMimeSystem_1_1VerbInfo.htm#a0659dd500e764d3184d1408cc571b738">m_handlerIndex</a> = c.<a class="code" href="classMimeSystem_1_1VerbInfo.htm#a0659dd500e764d3184d1408cc571b738">m_handlerIndex</a>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                        <a class="code" href="classMimeSystem_1_1VerbInfo.htm#a5014e8689baccc72df35a66f6ec34ffb">m_verb</a> = c.<a class="code" href="classMimeSystem_1_1VerbInfo.htm#a5014e8689baccc72df35a66f6ec34ffb">m_verb</a>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                        <a class="code" href="classMimeSystem_1_1VerbInfo.htm#aab1a472a7b35e8c587df143088147e6b">m_params</a> = c.<a class="code" href="classMimeSystem_1_1VerbInfo.htm#aab1a472a7b35e8c587df143088147e6b">m_params</a>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="code" href="classMimeSystem_1_1VerbInfo.htm#a5014e8689baccc72df35a66f6ec34ffb">   65</a></span>&#160;                std::string <a class="code" href="classMimeSystem_1_1VerbInfo.htm#a5014e8689baccc72df35a66f6ec34ffb">m_verb</a>;</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="code" href="classMimeSystem_1_1VerbInfo.htm#aab1a472a7b35e8c587df143088147e6b">   66</a></span>&#160;                std::string <a class="code" href="classMimeSystem_1_1VerbInfo.htm#aab1a472a7b35e8c587df143088147e6b">m_params</a>;</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="code" href="classMimeSystem_1_1VerbInfo.htm#ae55e259f30ceec5a065173809567e185">   67</a></span>&#160;                std::string <a class="code" href="classMimeSystem_1_1VerbInfo.htm#ae55e259f30ceec5a065173809567e185">m_handlerAppId</a>;</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="code" href="classMimeSystem_1_1VerbInfo.htm#a0659dd500e764d3184d1408cc571b738">   68</a></span>&#160;                uint32_t <a class="code" href="classMimeSystem_1_1VerbInfo.htm#a0659dd500e764d3184d1408cc571b738">m_handlerIndex</a>;</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="code" href="classMimeSystem_1_1VerbInfo.htm#ad4da58d78d87d858328d8d7816593374">   69</a></span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classMimeSystem_1_1VerbInfo.htm#ad4da58d78d87d858328d8d7816593374">m_valid</a>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        };</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keyword">static</span> <a class="code" href="classMimeSystem.htm">MimeSystem</a> * <a class="code" href="classMimeSystem.htm#a95a3192d5d1ca7ddc3127ac6096d1822">instance</a>();</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keyword">static</span> <a class="code" href="classMimeSystem.htm">MimeSystem</a> * <a class="code" href="classMimeSystem.htm#a95a3192d5d1ca7ddc3127ac6096d1822">instance</a>(<span class="keyword">const</span> std::string&amp; baseConfigFile);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keyword">static</span> <a class="code" href="classMimeSystem.htm">MimeSystem</a> * <a class="code" href="classMimeSystem.htm#a95a3192d5d1ca7ddc3127ac6096d1822">instance</a>(<span class="keyword">const</span> std::string&amp; baseConfigFile,<span class="keyword">const</span> std::string&amp; customizedConfigFile);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        std::string                     <a class="code" href="classMimeSystem.htm#a9998493fd486a1c4adb3a136cadc6a0d">getActiveAppIdForResource</a>(std::string mimeType);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordtype">int</span>                                     <a class="code" href="classMimeSystem.htm#a010181f128896611421d921c4c4bb66e">getAllAppIdForResource</a>(std::string mimeType,std::string&amp; r_active,std::vector&lt;std::string&gt;&amp; r_handlerAppIds);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <a class="code" href="classResourceHandler.htm">ResourceHandler</a>         <a class="code" href="classMimeSystem.htm#ae328beafeca454c9f5bdc7cd6abe1911">getActiveHandlerForResource</a>(std::string mimeType);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordtype">int</span>                                     <a class="code" href="classMimeSystem.htm#a9181832753c9025d79aed9116880a2d7">getAllHandlersForResource</a>(std::string mimeType,<a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; r_active,std::vector&lt;ResourceHandler&gt;&amp; r_handlers);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        std::string                     <a class="code" href="classMimeSystem.htm#acfd9f6577b191231e1b5cf1edde6a649">getActiveAppIdForRedirect</a>(<span class="keyword">const</span> std::string&amp; url,<span class="keywordtype">bool</span> doNotUseRegexpMatch,<span class="keywordtype">bool</span> disallowSchemeForms);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordtype">int</span>                                     <a class="code" href="classMimeSystem.htm#a6fb2a84d85b14c5b67322b65f71725bd">getAllAppIdForRedirect</a>(<span class="keyword">const</span> std::string&amp; url,<span class="keywordtype">bool</span> doNotUseRegexpMatch,std::string&amp; r_active,std::vector&lt;std::string&gt;&amp; r_handlerAppIds);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <a class="code" href="classRedirectHandler.htm">RedirectHandler</a>         <a class="code" href="classMimeSystem.htm#ada1492d7d491c4e136ae15572e9ae9bb">getActiveHandlerForRedirect</a>(<span class="keyword">const</span> std::string&amp; url,<span class="keywordtype">bool</span> doNotUseRegexpMatch,<span class="keywordtype">bool</span> disallowSchemeForms);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordtype">int</span>                                     <a class="code" href="classMimeSystem.htm#affc4c6abb07673ee188e799e22098511">getAllHandlersForRedirect</a>(<span class="keyword">const</span> std::string&amp; url,<span class="keywordtype">bool</span> doNotUseRegexpMatch,<a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; r_active,std::vector&lt;RedirectHandler&gt;&amp; r_handlers);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        std::string                     <a class="code" href="classMimeSystem.htm#ae69c4ee1f435d47198c27bc3bce42c0c">getAppIdByVerbForResource</a>(std::string mimeType,<span class="keyword">const</span> std::string&amp; verb,std::string&amp; r_params,uint32_t&amp; r_index);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <a class="code" href="classResourceHandler.htm">ResourceHandler</a>         <a class="code" href="classMimeSystem.htm#a268afbc837dec899b8224fde7f354691">getHandlerByVerbForResource</a>(std::string mimeType,<span class="keyword">const</span> std::string&amp; verb);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordtype">int</span>                                     <a class="code" href="classMimeSystem.htm#a6da46bdc2f73412a5eb097724aeba62c">getAllHandlersByVerbForResource</a>(std::string mimeType,<span class="keyword">const</span> std::string&amp; verb,std::vector&lt;ResourceHandler&gt;&amp; r_handlers);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordtype">int</span>                             <a class="code" href="classMimeSystem.htm#ac50fb14235e6d541487b8883175db3e2">getAllAppIdByVerbForResource</a>(std::string mimeType,<span class="keyword">const</span> std::string&amp; verb,std::vector&lt;VerbInfo&gt;&amp; r_handlers);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        std::string                     <a class="code" href="classMimeSystem.htm#a0696f15ffddd20409e1d537487ee05b5">getAppIdByVerbForRedirect</a>(<span class="keyword">const</span> std::string&amp; url,<span class="keywordtype">bool</span> disallowSchemeForms,<span class="keyword">const</span> std::string&amp; verb,std::string&amp; r_params,uint32_t&amp; r_index);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <a class="code" href="classRedirectHandler.htm">RedirectHandler</a>         <a class="code" href="classMimeSystem.htm#a64f94b72110e7a016dd062806e7c3da6">getHandlerByVerbForRedirect</a>(<span class="keyword">const</span> std::string&amp; url,<span class="keywordtype">bool</span> disallowSchemeForms,<span class="keyword">const</span> std::string&amp; verb);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordtype">int</span>                             <a class="code" href="classMimeSystem.htm#a2dd7472f894e2ca85a8382c4be5c54d9">getAllHandlersByVerbForRedirect</a>(<span class="keyword">const</span> std::string&amp; url,<span class="keyword">const</span> std::string&amp; verb,std::vector&lt;RedirectHandler&gt;&amp; r_handlers);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordtype">int</span>                             <a class="code" href="classMimeSystem.htm#a2e7efbbe41c08706a638a03bad224365">getAllAppIdByVerbForRedirect</a>(<span class="keyword">const</span> std::string&amp; url,<span class="keyword">const</span> std::string&amp; verb,std::vector&lt;VerbInfo&gt;&amp; r_handlers);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <a class="code" href="classRedirectHandler.htm">RedirectHandler</a>         <a class="code" href="classMimeSystem.htm#a07f575adb13ca685b25c614243db3e6a">getRedirectHandlerDirect</a>(<span class="keyword">const</span> uint32_t index);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <a class="code" href="classResourceHandler.htm">ResourceHandler</a>         <a class="code" href="classMimeSystem.htm#a645fdf7c970a1db5089aaf64edc0b29d">getResourceHandlerDirect</a>(<span class="keyword">const</span> uint32_t index);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordtype">int</span>                             <a class="code" href="classMimeSystem.htm#a89ea9a76336ee4ce3a5550b748da8fd0">removeAllForAppId</a>(<span class="keyword">const</span> std::string&amp; appId);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordtype">int</span>                                     <a class="code" href="classMimeSystem.htm#ab99a5833f1d02e0d9c34f4454578f6b5">removeAllForMimeType</a>(std::string mimeType);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordtype">int</span>                                     <a class="code" href="classMimeSystem.htm#ad5dba16baaf0a0e93313dc52a9310a4c">removeAllForUrl</a>(<span class="keyword">const</span> std::string&amp; url);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordtype">int</span>                                     <a class="code" href="classMimeSystem.htm#ab96c435e7e6d2630cc0127667c8e9134">addResourceHandler</a>(std::string&amp; extension,std::string mimeType,<span class="keywordtype">bool</span> shouldDownload,<span class="keyword">const</span> std::string appId,<span class="keyword">const</span> std::map&lt;std::string,std::string&gt; * pVerbs,<span class="keywordtype">bool</span> sysDefault);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordtype">int</span>                                     <a class="code" href="classMimeSystem.htm#ab96c435e7e6d2630cc0127667c8e9134">addResourceHandler</a>(std::string extension,<span class="keywordtype">bool</span> shouldDownload,<span class="keyword">const</span> std::string appId,<span class="keyword">const</span> std::map&lt;std::string,std::string&gt; * pVerbs,<span class="keywordtype">bool</span> sysDefault);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordtype">int</span>                                     <a class="code" href="classMimeSystem.htm#ab8b0367b515aa9ec8b312417cbfe6757">addRedirectHandler</a>(<span class="keyword">const</span> std::string&amp; url,<span class="keyword">const</span> std::string appId,<span class="keyword">const</span> std::map&lt;std::string,std::string&gt; * pVerbs,<span class="keywordtype">bool</span> isSchemeForm,<span class="keywordtype">bool</span> sysDefault);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordtype">int</span>                                     <a class="code" href="classMimeSystem.htm#a52b2e93f10ca54234ecf5fede538b632">addVerbsToResourceHandler</a>(std::string mimeType,<span class="keyword">const</span> std::string&amp; appId,<span class="keyword">const</span> std::map&lt;std::string,std::string&gt;&amp; verbs);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordtype">int</span>                                     <a class="code" href="classMimeSystem.htm#a4a5fe5381be46391eb2a5862db1368f0">addVerbsToRedirectHandler</a>(<span class="keyword">const</span> std::string&amp; url,<span class="keyword">const</span> std::string&amp; appId,<span class="keyword">const</span> std::map&lt;std::string,std::string&gt;&amp; verbs);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordtype">int</span>                                     <a class="code" href="classMimeSystem.htm#a65d0f06c1b6ddcd722fa2891b030daf7">addVerbsDirect</a>(uint32_t index,<span class="keyword">const</span> std::map&lt;std::string,std::string&gt;&amp; verbs);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordtype">int</span>                             <a class="code" href="classMimeSystem.htm#acedd789b3811923702068708a3edfc09">swapResourceHandler</a>(std::string mimeType, uint32_t index);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordtype">int</span>                                     <a class="code" href="classMimeSystem.htm#a3ce2743a69f35d0fb06949f962fb1fbd">swapRedirectHandler</a>(<span class="keyword">const</span> std::string&amp; url, uint32_t index);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">bool</span>             <a class="code" href="classMimeSystem.htm#a75f5bc3c920b97eacd57356775c1771c">getExtensionFromUrl</a>(<span class="keyword">const</span> std::string&amp; url,std::string&amp; r_extn);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordtype">bool</span>                            <a class="code" href="classMimeSystem.htm#ad275b928de6785aea8a62efe37810fa5">getMimeTypeByExtension</a>(std::string extension,std::string&amp; r_mimeType);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keyword">static</span> uint32_t         <a class="code" href="classMimeSystem.htm#a6b15a0659bfd23555c2810d083eb5161">assignIndex</a>();</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keyword">static</span> uint32_t         <a class="code" href="classMimeSystem.htm#aa6a874394252cd6844479113f67de92d">getLastAssignedIndex</a>();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keyword">static</span> std::string      <a class="code" href="classMimeSystem.htm#aedb64c9533ad09ab2d6505e4e73dcff1">makePseudoExtensionFromMime</a>(<span class="keyword">const</span> std::string&amp; mimeType);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        std::string                     <a class="code" href="classMimeSystem.htm#aa567d55bce0ff200166cb378f1056b28">allTablesAsJsonString</a>();</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        std::string                     <a class="code" href="classMimeSystem.htm#a9d93fc18d09c57ebb54e9ac3f120c52f">resourceTableAsJsonString</a>();</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        json_object *           <a class="code" href="classMimeSystem.htm#a6a699769c362999f175d9eeaf11bf8c0">resourceTableAsJson</a>();  <span class="comment">//WARNING: memory allocated; caller must clean</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        json_object *           <a class="code" href="classMimeSystem.htm#aa235804e1fa27be99c69e3ba02adb8d6">resourceTableAsJsonArray</a>();     <span class="comment">//WARNING: memory allocated; caller must clean</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        std::string                     <a class="code" href="classMimeSystem.htm#a2a1e43babf9e4f1971031d50ecd505c7">redirectTableAsJsonString</a>();</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        json_object *           <a class="code" href="classMimeSystem.htm#ab3ff62acbdb88fa789a3ae6ff3f2b3fd">redirectTableAsJson</a>();  <span class="comment">//WARNING: memory allocated; caller must clean</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        json_object *           <a class="code" href="classMimeSystem.htm#af0c41ab50d9b40ce2f7b643ff561a235">redirectTableAsJsonArray</a>();     <span class="comment">//WARNING: memory allocated; caller must clean</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        std::string                     <a class="code" href="classMimeSystem.htm#a54ddaa3862a7e637695d961c7245b4d4">extensionMapAsJsonString</a>();</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        json_object *           <a class="code" href="classMimeSystem.htm#a04092507a60032b1b59b6887ed6304c6">extensionMapAsJson</a>();   <span class="comment">//WARNING: memory allocated; caller must clean</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        json_object *           <a class="code" href="classMimeSystem.htm#a003db98fbc13d7430290819c1e671f95">extensionMapAsJsonArray</a>();      <span class="comment">//WARNING: memory allocated; caller must clean</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordtype">bool</span>                            <a class="code" href="classMimeSystem.htm#a792ddf53e55dde6629dfe813a342cc73">saveMimeTable</a>(<span class="keyword">const</span> std::string&amp; file,std::string&amp; r_err);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordtype">bool</span>                            <a class="code" href="classMimeSystem.htm#a31ff9f83c34255f1889e36f3b92800d0">saveMimeTableToActiveFile</a>(std::string&amp; r_err);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordtype">bool</span>                            <a class="code" href="classMimeSystem.htm#a391ad1ed855523ee4203f676a0643d07">restoreMimeTable</a>(<span class="keyword">const</span> std::string&amp; file,std::string&amp; r_err);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordtype">bool</span>                            <a class="code" href="classMimeSystem.htm#a391ad1ed855523ee4203f676a0643d07">restoreMimeTable</a>(json_object * source,std::string&amp; r_err);                      <span class="comment">//a version of restore that takes a read-in version of the file as a json obj.</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keywordtype">bool</span>                            <a class="code" href="classMimeSystem.htm#a4739a4b3f310162360bab0bbd9c5e593">clearMimeTable</a>();</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span>                     <a class="code" href="classMimeSystem.htm#aac9903296665d9c4e1524facacc7307c">deleteSavedMimeTable</a>();                         </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="comment">//some utils</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classMimeSystem.htm#a26c9ebaa1b572c30289a51dbfffe44d5">extractVerbsFromHandlerEntryJson</a>(<span class="keyword">struct</span> json_object * jsonHandlerEntry,std::map&lt;std::string,std::string&gt;&amp; r_verbs);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classMimeSystem.htm#a7ab5303e53da562b318a7b8f6c939982">extractVerbsFromHandlerNodeEntryJson</a>(<span class="keyword">struct</span> json_object * jsonHandlerNodeEntry,std::map&lt;std::string,uint32_t&gt;&amp; r_verbs);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <a class="code" href="classMimeSystem.htm">MimeSystem</a>();</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <a class="code" href="classMimeSystem.htm">MimeSystem</a>(<span class="keyword">const</span> <a class="code" href="classMimeSystem.htm">MimeSystem</a>&amp; c) {}</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <a class="code" href="classMimeSystem.htm">MimeSystem</a>&amp; operator=(<span class="keyword">const</span> <a class="code" href="classMimeSystem.htm">MimeSystem</a>&amp; c) { <span class="keywordflow">return</span> *<span class="keyword">this</span>;}</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keyword">virtual</span> ~<a class="code" href="classMimeSystem.htm">MimeSystem</a>();</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordtype">void</span> destroy();</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordtype">int</span> populateFromJson(<span class="keyword">struct</span> json_object * jobj);                <span class="comment">//useful only for the initial command-resource-handlers.json file reading</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keyword">class </span>VerbCacheEntry {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                VerbCacheEntry() : activeIndex(0) , useCount(0) {}</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                VerbCacheEntry(uint32_t index) : activeIndex(index) , useCount(1) {}</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                VerbCacheEntry(<span class="keyword">const</span> VerbCacheEntry&amp; c) : activeIndex(c.activeIndex) , useCount(c.useCount) {}</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                VerbCacheEntry&amp; operator=(<span class="keyword">const</span> VerbCacheEntry&amp; c) {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                        <span class="keywordflow">if</span> (<span class="keyword">this</span> == &amp;c)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                                <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                        activeIndex = c.activeIndex;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                        useCount = c.useCount;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                uint32_t activeIndex;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                uint32_t useCount;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        };</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keyword">class </span>RedirectHandlerNode {</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                RedirectHandlerNode(<span class="keyword">const</span> std::string&amp; urlRe, <span class="keyword">const</span> std::string&amp; appId , <span class="keywordtype">bool</span> schemeForm) : m_redirectHandler(urlRe,appId,schemeForm) {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                        m_handlersByIndex[m_redirectHandler.index()] = &amp;m_redirectHandler;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                <a class="code" href="classRedirectHandler.htm">RedirectHandler</a> m_redirectHandler;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                std::vector&lt;RedirectHandler *&gt; m_alternates;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                std::map&lt;std::string,VerbCacheEntry&gt; m_verbCache;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                std::map&lt;uint32_t,RedirectHandler *&gt; m_handlersByIndex;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                <span class="keywordtype">int</span> removePrimary();</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                <span class="keywordtype">int</span> removeAppId(<span class="keyword">const</span> std::string&amp; appId);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                <span class="keywordtype">int</span> swapHandler(uint32_t index);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                <span class="keywordtype">int</span> removeVerb(<span class="keyword">const</span> std::string&amp; verb,<a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; handler);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                <span class="keywordtype">int</span> removeAllVerbsOfHandler(<a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; handler);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <span class="keywordtype">bool</span> isCurrentVerbHandler(<span class="keyword">const</span> std::string&amp; verb,<a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; handler);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <span class="keywordtype">bool</span> pickRandomVerbHandler(<span class="keyword">const</span> std::string&amp; verb,uint32_t&amp; r_chosenIndex);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                <span class="keywordtype">bool</span> reassignRandomVerbHandler(<span class="keyword">const</span> std::string&amp; verb);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                <span class="keywordtype">bool</span> exists(<span class="keyword">const</span> std::string&amp; urlRe, <span class="keyword">const</span> std::string&amp; appId) {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                        <span class="keywordflow">if</span> (m_redirectHandler.equals(urlRe,appId))</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                        <span class="keywordflow">for</span> (std::vector&lt;RedirectHandler *&gt;::iterator it=m_alternates.begin();</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                        it != m_alternates.end();++it)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                        {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                <span class="keywordflow">if</span> ((*it)-&gt;equals(urlRe,appId))</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                                        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                        }</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                <span class="keyword">virtual</span> ~RedirectHandlerNode();</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                std::string toJsonString();</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="keyword">struct </span>json_object * toJson();                  <span class="comment">//WARNING: memory allocated; caller must clean</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                <span class="keyword">static</span> MimeSystem::RedirectHandlerNode * fromJsonString(<span class="keyword">const</span> std::string&amp; jsonString);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                <span class="keyword">static</span> MimeSystem::RedirectHandlerNode * fromJson(<span class="keyword">struct</span> json_object * jobj);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                <span class="keywordtype">int</span> fixupVerbCacheTable(<span class="keyword">struct</span> json_object * jsonHandlerNodeEntry);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        };</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keyword">class </span>ResourceHandlerNode {</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                ResourceHandlerNode(<span class="keyword">const</span> std::string&amp; ext, </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                                                <span class="keyword">const</span> std::string&amp; contentType, </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                                <span class="keyword">const</span> std::string&amp; appId, </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                                <span class="keywordtype">bool</span> stream=<span class="keyword">false</span> ) : m_resourceHandler(ext,contentType,appId,stream) {</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                        m_handlersByIndex[m_resourceHandler.index()] = &amp;m_resourceHandler;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                <a class="code" href="classResourceHandler.htm">ResourceHandler</a>         m_resourceHandler;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                std::vector&lt;ResourceHandler *&gt; m_alternates;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                std::map&lt;std::string,VerbCacheEntry&gt; m_verbCache;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                std::map&lt;uint32_t,ResourceHandler *&gt; m_handlersByIndex;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                <span class="keywordtype">int</span> removePrimary();</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                <span class="keywordtype">int</span> removeAppId(<span class="keyword">const</span> std::string&amp; appId);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                <span class="keywordtype">int</span> swapHandler(uint32_t index);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                <span class="keywordtype">int</span> removeVerb(<span class="keyword">const</span> std::string&amp; verb,<a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; handler);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                <span class="keywordtype">int</span> removeAllVerbsOfHandler(<a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; handler);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                <span class="keywordtype">bool</span> isCurrentVerbHandler(<span class="keyword">const</span> std::string&amp; verb,<a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; handler);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                <span class="keywordtype">bool</span> pickRandomVerbHandler(<span class="keyword">const</span> std::string&amp; verb,uint32_t&amp; r_chosenIndex);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                <span class="keywordtype">bool</span> reassignRandomVerbHandler(<span class="keyword">const</span> std::string&amp; verb);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                <span class="keywordtype">bool</span> exists(<span class="keyword">const</span> std::string&amp; extension,<span class="keyword">const</span> std::string&amp; appId,<span class="keyword">const</span> std::string&amp; contentType,<span class="keywordtype">bool</span> stream) {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                        <span class="keywordflow">if</span> (m_resourceHandler.match(extension,appId,contentType,stream))</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                        <span class="keywordflow">for</span> (std::vector&lt;ResourceHandler *&gt;::iterator it=m_alternates.begin();</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                        it != m_alternates.end();++it)</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                        {</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                                <span class="keywordflow">if</span> ((*it)-&gt;match(extension,appId,contentType,stream))</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                                        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                        }</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                }</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                <span class="keywordtype">bool</span> exists(<span class="keyword">const</span> std::string&amp; appId,<span class="keyword">const</span> std::string&amp; contentType) {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                        <span class="keywordflow">if</span> (m_resourceHandler.match(appId,contentType))</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                        <span class="keywordflow">for</span> (std::vector&lt;ResourceHandler *&gt;::iterator it=m_alternates.begin();</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                        it != m_alternates.end();++it)</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                        {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                                <span class="keywordflow">if</span> ((*it)-&gt;match(appId,contentType))</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                                        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                        }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                }</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                <span class="keyword">virtual</span> ~ResourceHandlerNode();</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                </div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                std::string toJsonString();</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                <span class="keyword">struct </span>json_object * toJson();                  <span class="comment">//WARNING: memory allocated; caller must clean</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                <span class="keyword">static</span> MimeSystem::ResourceHandlerNode * fromJsonString(<span class="keyword">const</span> std::string&amp; jsonString);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                <span class="keyword">static</span> MimeSystem::ResourceHandlerNode * fromJson(<span class="keyword">struct</span> json_object * jobj);</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                <span class="keywordtype">int</span> fixupVerbCacheTable(<span class="keyword">struct</span> json_object * jsonHandlerNodeEntry);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        };</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        </div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span> reclaimIndex(uint32_t idx);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        </div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">int</span> addVerbs(<span class="keyword">const</span> std::map&lt;std::string,std::string&gt;&amp; verbs,ResourceHandlerNode&amp; resourceHandlerNode,<a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; newHandler);</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">int</span> addVerbs(<span class="keyword">const</span> std::map&lt;std::string,std::string&gt;&amp; verbs,RedirectHandlerNode&amp; redirectHandlerNode,<a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; newHandler);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="comment">//dbg</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordtype">bool</span>                            <a class="code" href="classMimeSystem.htm#a3612947eabbe7db427c248a7143ae5de">dbg_printMimeTables</a>();</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keywordtype">bool</span>                            <a class="code" href="classMimeSystem.htm#a51c24205aa445ef7c2b51ded52f65151">dbg_getResourceTableStrings</a>(std::vector&lt;std::pair&lt;std::string,std::vector&lt;std::string&gt; &gt; &gt;&amp; r_resourceTableStrings);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="keywordtype">bool</span>                            <a class="code" href="classMimeSystem.htm#a3a7c7a7ad97c4b7693f29be8f5dfe3b1">dbg_getRedirectTableStrings</a>(std::vector&lt;std::pair&lt;std::string,std::vector&lt;std::string&gt; &gt; &gt;&amp; r_redirectTableStrings);</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keywordtype">void</span>                            <a class="code" href="classMimeSystem.htm#a3064cc16bd363325765e73b7f0ca1861">dbg_printVerbCacheTableForResource</a>(<span class="keyword">const</span> std::string&amp; mime);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <span class="keywordtype">void</span>                            <a class="code" href="classMimeSystem.htm#abaf99c2e12dbbf4ff317971054202c0a">dbg_printVerbCacheTableForRedirect</a>(<span class="keyword">const</span> std::string&amp; url);</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keywordtype">void</span>                            <a class="code" href="classMimeSystem.htm#a18baef917e7c0b46e8fd872ed14eb339">dbg_printVerbCacheTableForScheme</a>(<span class="keyword">const</span> std::string&amp; url);</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span>                     <a class="code" href="classMimeSystem.htm#ac46d03687d8d2832beaea651e219fc77">dbg_printVerbCacheTable</a>(<span class="keyword">const</span> std::map&lt;std::string,VerbCacheEntry&gt; * p_verbCacheTable);</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span>                     <a class="code" href="classMimeSystem.htm#ab3b687c41d217871e588be55e3576d1a">dbg_printResourceHandlerNode</a>(<span class="keyword">const</span> ResourceHandlerNode * p_resourceHandlerNode,<span class="keywordtype">int</span> level=0);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span>                     <a class="code" href="classMimeSystem.htm#a32fbcd92a633c5d380343d8845eb622c">dbg_printRedirectHandlerNode</a>(<span class="keyword">const</span> RedirectHandlerNode * p_redirectHandlerNode,<span class="keywordtype">int</span> level=0);</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        ResourceHandlerNode *   getResourceHandlerNode(<span class="keyword">const</span> std::string&amp; mimeType);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        RedirectHandlerNode *   getRedirectHandlerNode(<span class="keyword">const</span> std::string&amp; url);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        RedirectHandlerNode *   getSchemeHandlerNode(<span class="keyword">const</span> std::string&amp; url);</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        </div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        </div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <span class="keyword">static</span> <a class="code" href="classMimeSystem.htm">MimeSystem</a> * s_p_inst;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        </div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keyword">static</span> Mutex    s_mutex;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        Mutex                   m_mutex;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        </div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        std::map&lt;std::string,MimeSystem::ResourceHandlerNode *&gt; m_resourceHandlerMap;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        std::map&lt;std::string,MimeSystem::RedirectHandlerNode *&gt; m_redirectHandlerMap;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        </div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        std::map&lt;std::string,std::string&gt;                                               m_extensionToMimeMap;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="keyword">static</span> uint32_t         s_genIndex;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keyword">static</span> uint32_t         s_lastAssignedIndex;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="keyword">static</span> std::vector&lt;uint32_t&gt; s_indexRecycler;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        </div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        <span class="keyword">typedef</span> std::map&lt;std::string,MimeSystem::ResourceHandlerNode *&gt; ResourceMapType;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <span class="keyword">typedef</span> std::map&lt;std::string,MimeSystem::ResourceHandlerNode *&gt;::iterator ResourceMapIterType;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <span class="keyword">typedef</span> std::map&lt;std::string,MimeSystem::RedirectHandlerNode *&gt; RedirectMapType;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        <span class="keyword">typedef</span> std::map&lt;std::string,MimeSystem::RedirectHandlerNode *&gt;::iterator RedirectMapIterType;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        <span class="keyword">typedef</span> std::map&lt;std::string,MimeSystem::VerbCacheEntry&gt; VerbCacheMapType;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="keyword">typedef</span> std::map&lt;std::string,MimeSystem::VerbCacheEntry&gt;::iterator VerbCacheMapIterType;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;};</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/*MIMESYSTEM_H_*/</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_26332aa2644dbe93fe6f8b280178253c.htm">luna-sysmgr</a></li><li class="navelem"><a class="el" href="dir_8c5e5096bb729179ac3532fcf9eeb777.htm">Src</a></li><li class="navelem"><a class="el" href="dir_464f84f5da23097a678db14a336cf9f8.htm">base</a></li><li class="navelem"><a class="el" href="dir_1e11d809bd72c8e09b801d2aa6342677.htm">application</a></li><li class="navelem"><a class="el" href="MimeSystem_8h.htm">MimeSystem.h</a></li>
    <li class="footer">Generated on Fri Jun 21 2013 00:53:53 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
