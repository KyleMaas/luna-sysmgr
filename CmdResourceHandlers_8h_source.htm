<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>LunaSysMgr: CmdResourceHandlers.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('CmdResourceHandlers_8h_source.htm','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CmdResourceHandlers.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="CmdResourceHandlers_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/* @@@LICENSE</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">*      Copyright (c) 2008-2012 Hewlett-Packard Development Company, L.P.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">* you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">* You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">* See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* limitations under the License.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* LICENSE@@@ */</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#ifndef __CmdResourceHandlers_h__</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __CmdResourceHandlers_h__</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;Common.h&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;regex.h&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;stdint.h&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">class </span>RedirectHandlerNode;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">class </span>ResourceHandlerNode;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm">   42</a></span>&#160;<span class="keyword">class </span><a class="code" href="classRedirectHandler.htm">RedirectHandler</a></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                <a class="code" href="classRedirectHandler.htm#a7b611248d8f8938c32707bd1a2e070b6">RedirectHandler</a>(<span class="keyword">const</span> std::string&amp; <a class="code" href="classRedirectHandler.htm#a23c26143bea06b7dc5662c04153286bd">urlRe</a>, <span class="keyword">const</span> std::string&amp; <a class="code" href="classRedirectHandler.htm#ac12dd431845ee64fd6f91cfdf577314b">appId</a>, <span class="keywordtype">bool</span> schemeform );</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                <a class="code" href="classRedirectHandler.htm#a7b611248d8f8938c32707bd1a2e070b6">RedirectHandler</a>(<span class="keyword">const</span> std::string&amp; urlRe, <span class="keyword">const</span> std::string&amp; appId, <span class="keywordtype">bool</span> schemeform, <span class="keyword">const</span> std::string&amp; handler_tag);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                <span class="keyword">virtual</span> <a class="code" href="classRedirectHandler.htm#a81f34cfe7edfba31dda21f9be4402a78">~RedirectHandler</a>();</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                <a class="code" href="classRedirectHandler.htm#a7b611248d8f8938c32707bd1a2e070b6">RedirectHandler</a>();</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                </div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm#a23c26143bea06b7dc5662c04153286bd">   50</a></span>&#160;                <span class="keyword">const</span> std::string&amp; <a class="code" href="classRedirectHandler.htm#a23c26143bea06b7dc5662c04153286bd">urlRe</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_urlRe; }</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm#ac12dd431845ee64fd6f91cfdf577314b">   51</a></span>&#160;                <span class="keyword">const</span> std::string&amp; <a class="code" href="classRedirectHandler.htm#ac12dd431845ee64fd6f91cfdf577314b">appId</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_appId; }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#afef212736aae208a9509b073e5f21b3a">matches</a>(<span class="keyword">const</span> std::string&amp; url) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#af8fb88e5aee8a94b12d0b80539538e71">reValid</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#a51182b9dbb0236c493161b050261c229">addVerb</a>(<span class="keyword">const</span> std::string&amp; verb,<span class="keyword">const</span> std::string&amp; jsonizedParams);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                <span class="keywordtype">void</span> <a class="code" href="classRedirectHandler.htm#a8fe4bd4fa2697ef6f4b04648a96db663">removeVerb</a>(<span class="keyword">const</span> std::string&amp; verb);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                </div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm#a617fd878b1ba2d26a2a7edac5eb25a4f">   58</a></span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#a617fd878b1ba2d26a2a7edac5eb25a4f">operator==</a>(<span class="keyword">const</span> <a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; c)<span class="keyword"> const </span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">                </span>{</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                        <span class="keywordflow">return</span> ((m_urlRe == c.m_urlRe) &amp;&amp; (m_appId == c.m_appId));</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                }</div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm#aadceb315bf3a200559f27d344768ca40">   62</a></span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#aadceb315bf3a200559f27d344768ca40">operator!=</a>(<span class="keyword">const</span> <a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; c)<span class="keyword"> const </span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">                </span>{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                        <span class="keywordflow">return</span> ((m_urlRe != c.m_urlRe) || (m_appId != c.m_appId));</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                }</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm#a3f2c3c9c81849c5b5a72835a9bdbfbf9">   66</a></span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#a3f2c3c9c81849c5b5a72835a9bdbfbf9">equals</a>(<span class="keyword">const</span> std::string&amp; url,<span class="keyword">const</span> std::string&amp; appId)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                        <span class="keywordflow">return</span> ((m_urlRe == url) &amp;&amp; (m_appId == appId));</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                <a class="code" href="classRedirectHandler.htm#a7b611248d8f8938c32707bd1a2e070b6">RedirectHandler</a>(<span class="keyword">const</span> <a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; c);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                <a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; <a class="code" href="classRedirectHandler.htm#ae551638011e826b447d1e10234cc0a91">operator=</a>(<span class="keyword">const</span> <a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; rhs);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                </div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm#a5897b62256ff0526981cc9ff1ba6c219">   74</a></span>&#160;                <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classRedirectHandler.htm#a5897b62256ff0526981cc9ff1ba6c219">RedirectHandlerNode</a>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                </div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm#a2e4eda34502fcc5f804d882b1dd2a49c">   76</a></span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#a2e4eda34502fcc5f804d882b1dd2a49c">valid</a>()<span class="keyword"> const      </span>{ <span class="keywordflow">return</span> m_valid;}</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm#a5890c78bfe8582b7053a7f262f241b90">   77</a></span>&#160;                <span class="keywordtype">void</span> <a class="code" href="classRedirectHandler.htm#a5890c78bfe8582b7053a7f262f241b90">markInvalid</a>() { m_valid = <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm#a26f0b44f04ec20a0efe59051d9ddf867">   78</a></span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#a26f0b44f04ec20a0efe59051d9ddf867">isSchemeForm</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_schemeForm;}</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                </div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm#a8550828645f751f995da32a0a3399480">   80</a></span>&#160;                <span class="keyword">const</span> std::string&amp; <a class="code" href="classRedirectHandler.htm#a8550828645f751f995da32a0a3399480">tag</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_tag; }</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm#ac9710f3d7177f9b73dc23537d7ef1747">   81</a></span>&#160;                <span class="keywordtype">void</span> <a class="code" href="classRedirectHandler.htm#ac9710f3d7177f9b73dc23537d7ef1747">setTag</a>(<span class="keyword">const</span> std::string&amp; newtag) { m_tag = newtag;}</div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm#a508603196078dbe0b57a2cc28e2ede66">   82</a></span>&#160;                uint32_t <a class="code" href="classRedirectHandler.htm#a508603196078dbe0b57a2cc28e2ede66">index</a>() { <span class="keywordflow">return</span> m_index; }</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm#a01ee53fc7fce62ec09c19ed3bfa612ae">   83</a></span>&#160;                uint32_t <a class="code" href="classRedirectHandler.htm#a01ee53fc7fce62ec09c19ed3bfa612ae">setIndex</a>(uint32_t newindex) { uint32_t t = m_index; m_index = newindex; <span class="keywordflow">return</span> t;}</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                std::string             <a class="code" href="classRedirectHandler.htm#a84670091f908d1746228e93bf8a31f31">toJsonString</a>();</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                <span class="keyword">struct </span>json_object * <a class="code" href="classRedirectHandler.htm#af11b9eb90c1cda25288b53d6a239774d">toJson</a>();                  <span class="comment">//WARNING: memory allocated; caller must clean</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                </div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="code" href="classRedirectHandler.htm#a241932a84825174023df9418fdb33c29">   88</a></span>&#160;                <span class="keyword">const</span> std::map&lt;std::string,std::string&gt;&amp; <a class="code" href="classRedirectHandler.htm#a241932a84825174023df9418fdb33c29">verbs</a>() { <span class="keywordflow">return</span> m_verbs;}</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keyword">private</span>:</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                std::string m_urlRe; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                std::string m_appId;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                regex_t m_urlReg; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                <span class="keywordtype">bool</span>    m_valid;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                <span class="keywordtype">bool</span>    m_schemeForm;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                std::string m_tag;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                uint32_t m_index;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                std::map&lt;std::string,std::string&gt;       m_verbs;                                <span class="comment">// &lt; Verb , json-ized string of parameters &gt;</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;};</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="code" href="classResourceHandler.htm">  107</a></span>&#160;<span class="keyword">class </span><a class="code" href="classResourceHandler.htm">ResourceHandler</a></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                <a class="code" href="classResourceHandler.htm#a0a33aab3f38dba04b5dc3f4496d324df">ResourceHandler</a>( <span class="keyword">const</span> std::string&amp; ext, </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                <span class="keyword">const</span> std::string&amp; <a class="code" href="classResourceHandler.htm#a7c303da83bf6e9a165c1393b6ef29e9d">contentType</a>, </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                <span class="keyword">const</span> std::string&amp; <a class="code" href="classResourceHandler.htm#a77d7d3f3d208fc0160207af3fffe6466">appId</a>, </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#a2f554f84333e006714c4e0c5e01f0504">stream</a>=<span class="keyword">false</span> );</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                <a class="code" href="classResourceHandler.htm#a0a33aab3f38dba04b5dc3f4496d324df">ResourceHandler</a>( <span class="keyword">const</span> std::string&amp; ext, </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                <span class="keyword">const</span> std::string&amp; contentType, </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                <span class="keyword">const</span> std::string&amp; appId,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#a2f554f84333e006714c4e0c5e01f0504">stream</a>,</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                <span class="keyword">const</span> std::string&amp; handler_tag);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                </div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a7d4d3c48a55160ea08b281636580595b">  120</a></span>&#160;                <a class="code" href="classResourceHandler.htm#a7d4d3c48a55160ea08b281636580595b">~ResourceHandler</a>() { }</div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a0a33aab3f38dba04b5dc3f4496d324df">  121</a></span>&#160;                <a class="code" href="classResourceHandler.htm#a0a33aab3f38dba04b5dc3f4496d324df">ResourceHandler</a>() : m_stream(false), m_valid(false), m_index(0) {}</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                <a class="code" href="classResourceHandler.htm#a0a33aab3f38dba04b5dc3f4496d324df">ResourceHandler</a>(<span class="keyword">const</span> <a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; c);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                <a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; <a class="code" href="classResourceHandler.htm#a562d354f15803a89b1d7eba9de1ee786">operator=</a>(<span class="keyword">const</span> <a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; c);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a13ef8088fb13059c255ce6431bb94f83">  126</a></span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#a13ef8088fb13059c255ce6431bb94f83">operator==</a>(<span class="keyword">const</span> <a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; c)<span class="keyword"> const</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keyword">                </span>{</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                        <span class="keywordflow">return</span> ((m_fileExt == c.m_fileExt) &amp;&amp; (m_contentType == c.m_contentType) &amp;&amp; (m_appId == c.m_appId) &amp;&amp; (m_stream == c.m_stream));</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                </div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a4274a223108bae52ca1474efb1257ae9">  131</a></span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#a4274a223108bae52ca1474efb1257ae9">operator!=</a>(<span class="keyword">const</span> <a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; c)<span class="keyword"> const</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword">                </span>{</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                        <span class="keywordflow">return</span> ((m_fileExt != c.m_fileExt) || (m_contentType != c.m_contentType) || (m_appId != c.m_appId) || (m_stream != c.m_stream));</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#ad7cdb2fd211e6706f0cefde4c52ee1cb">  136</a></span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#ad7cdb2fd211e6706f0cefde4c52ee1cb">match</a>(<span class="keyword">const</span> std::string&amp; extension,<span class="keyword">const</span> std::string&amp; appId,<span class="keyword">const</span> std::string&amp; mimeType,<span class="keywordtype">bool</span> stream)<span class="keyword"> const</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keyword">                </span>{</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                        <span class="keywordflow">return</span> ((m_fileExt == extension) &amp;&amp; (m_contentType == mimeType) &amp;&amp; (m_appId == appId) &amp;&amp; (m_stream == stream));</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                }</div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a59c970d92f76adba5e8ec6adc15cfdc7">  140</a></span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#ad7cdb2fd211e6706f0cefde4c52ee1cb">match</a>(<span class="keyword">const</span> std::string&amp; extension,<span class="keyword">const</span> std::string&amp; appId,<span class="keyword">const</span> std::string&amp; mimeType)<span class="keyword"> const</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword">                </span>{</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                        <span class="keywordflow">return</span> ((m_fileExt == extension) &amp;&amp; (m_contentType == mimeType) &amp;&amp; (m_appId == appId));         </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                }</div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#abaf9ec174258cb665983d501860c49ee">  144</a></span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#ad7cdb2fd211e6706f0cefde4c52ee1cb">match</a>(<span class="keyword">const</span> std::string&amp; appId,<span class="keyword">const</span> std::string&amp; mimeType)<span class="keyword"> const</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keyword">                </span>{</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                        <span class="keywordflow">return</span> ((m_contentType == mimeType) &amp;&amp; (m_appId == appId));             </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                </div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a77d7d3f3d208fc0160207af3fffe6466">  149</a></span>&#160;                <span class="keyword">const</span> std::string&amp; <a class="code" href="classResourceHandler.htm#a77d7d3f3d208fc0160207af3fffe6466">appId</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_appId; }</div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a2bb5af7b041a83a9c7416e065c60058b">  150</a></span>&#160;                <span class="keyword">const</span> std::string&amp; <a class="code" href="classResourceHandler.htm#a2bb5af7b041a83a9c7416e065c60058b">fileExt</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fileExt; }</div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a7c303da83bf6e9a165c1393b6ef29e9d">  151</a></span>&#160;                <span class="keyword">const</span> std::string&amp; <a class="code" href="classResourceHandler.htm#a7c303da83bf6e9a165c1393b6ef29e9d">contentType</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_contentType; }</div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a9eafcadf7a7a6c6a723ae835a9d13d5f">  152</a></span>&#160;                <span class="keyword">const</span> std::string&amp; <a class="code" href="classResourceHandler.htm#a9eafcadf7a7a6c6a723ae835a9d13d5f">tag</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_tag; }</div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a5527b5c006a625ffe2cb4a23b1c403b3">  153</a></span>&#160;                <span class="keywordtype">void</span> <a class="code" href="classResourceHandler.htm#a5527b5c006a625ffe2cb4a23b1c403b3">setTag</a>(<span class="keyword">const</span> std::string&amp; newtag) { m_tag = newtag;}</div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a83a14b136ec471d10dfe8a54236350b8">  154</a></span>&#160;                uint32_t <a class="code" href="classResourceHandler.htm#a83a14b136ec471d10dfe8a54236350b8">index</a>() { <span class="keywordflow">return</span> m_index; }</div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a98ddf0bdf097ad7e823b3a2aa01d5059">  155</a></span>&#160;                uint32_t <a class="code" href="classResourceHandler.htm#a98ddf0bdf097ad7e823b3a2aa01d5059">setIndex</a>(uint32_t newindex) { uint32_t t = m_index; m_index = newindex; <span class="keywordflow">return</span> t;}</div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a2f554f84333e006714c4e0c5e01f0504">  156</a></span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#a2f554f84333e006714c4e0c5e01f0504">stream</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_stream; }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a1e6d3a47201084897b2db9c0d72b0425">  158</a></span>&#160;                <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classResourceHandler.htm#a1e6d3a47201084897b2db9c0d72b0425">ResourceHandlerNode</a>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                </div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#abe5e5d851a2beb96dfcf08f8e7aed4e8">  160</a></span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#abe5e5d851a2beb96dfcf08f8e7aed4e8">valid</a>()    { <span class="keywordflow">return</span> m_valid;}</div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#a0f6b7ba786b160f30c9979ae19552d20">  161</a></span>&#160;                <span class="keywordtype">void</span> <a class="code" href="classResourceHandler.htm#a0f6b7ba786b160f30c9979ae19552d20">markInvalid</a>() { m_valid = <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#a7864762a5b6bdf80110326e92f5a90a2">addVerb</a>(<span class="keyword">const</span> std::string&amp; verb,<span class="keyword">const</span> std::string&amp; jsonizedParams);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                <span class="keywordtype">void</span> <a class="code" href="classResourceHandler.htm#ac4f6a7c54dbfa28ce948ac049d3b9a4e">removeVerb</a>(<span class="keyword">const</span> std::string&amp; verb);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                std::string             <a class="code" href="classResourceHandler.htm#a91cd53b34481fefadcd2a9a3de3a4aa3">toJsonString</a>();</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                <span class="keyword">struct </span>json_object * <a class="code" href="classResourceHandler.htm#aa39d9fccd1824154e8fa7954090f3d0f">toJson</a>();                  <span class="comment">//WARNING: memory allocated; caller must clean</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                </div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="code" href="classResourceHandler.htm#acaa8eec4707443d6041f9ea98ed19ea2">  168</a></span>&#160;                <span class="keyword">const</span> std::map&lt;std::string,std::string&gt;&amp; <a class="code" href="classResourceHandler.htm#acaa8eec4707443d6041f9ea98ed19ea2">verbs</a>() { <span class="keywordflow">return</span> m_verbs;}</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keyword">private</span>:</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                std::string m_fileExt;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                std::string m_contentType;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                std::string m_appId;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                <span class="keywordtype">bool</span> m_stream;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                <span class="keywordtype">bool</span> m_valid;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                std::string m_tag;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                uint32_t        m_index;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                std::map&lt;std::string,std::string&gt;       m_verbs;                                <span class="comment">// &lt; Verb , json-ized string of parameters &gt;</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;};</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_26332aa2644dbe93fe6f8b280178253c.htm">luna-sysmgr</a></li><li class="navelem"><a class="el" href="dir_8c5e5096bb729179ac3532fcf9eeb777.htm">Src</a></li><li class="navelem"><a class="el" href="dir_464f84f5da23097a678db14a336cf9f8.htm">base</a></li><li class="navelem"><a class="el" href="dir_1e11d809bd72c8e09b801d2aa6342677.htm">application</a></li><li class="navelem"><a class="el" href="CmdResourceHandlers_8h.htm">CmdResourceHandlers.h</a></li>
    <li class="footer">Generated on Fri Jun 21 2013 00:53:53 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
