<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>LunaSysMgr: ApplicationDescription.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('ApplicationDescription_8h_source.htm','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ApplicationDescription.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ApplicationDescription_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/* @@@LICENSE</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">*      Copyright (c) 2008-2012 Hewlett-Packard Development Company, L.P.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">* you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">* You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">* See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* limitations under the License.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* LICENSE@@@ */</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#ifndef APPLICATIONDESCRIPTION_H</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define APPLICATIONDESCRIPTION_H</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;Common.h&quot;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;stdint.h&gt;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;list&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="LaunchPoint_8h.htm">LaunchPoint.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;KeywordMap.h&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="CmdResourceHandlers_8h.htm">CmdResourceHandlers.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;ApplicationDescriptionBase.h&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">struct </span>json_object;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">struct </span><a class="code" href="structApplicationStatus.htm">ApplicationStatus</a>;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="code" href="classSysmgrBuiltinLaunchHelper.htm">   37</a></span>&#160;<span class="keyword">class </span><a class="code" href="classSysmgrBuiltinLaunchHelper.htm">SysmgrBuiltinLaunchHelper</a> : <span class="keyword">public</span> <a class="code" href="classQObject.htm">QObject</a></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        Q_OBJECT</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="code" href="classSysmgrBuiltinLaunchHelper.htm#afc64db88becd7b868d2f17fd15607757">   42</a></span>&#160;        <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#afc64db88becd7b868d2f17fd15607757">SysmgrBuiltinLaunchHelper</a>(<span class="keyword">const</span> std::string&amp; args)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        : <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a39818d74fa59723abe04ff20d1551558">m_builtIn_argsAsStringEncodedJson</a>(args) {}</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a38eb0e3fa00ecddcc7e3e6b5dfd01c10">   45</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a38eb0e3fa00ecddcc7e3e6b5dfd01c10">launch</a>()</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                Q_EMIT <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a7bbcbf224876cb9ef0d9dff0b71c966c">signalEntry</a>(<a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a39818d74fa59723abe04ff20d1551558">m_builtIn_argsAsStringEncodedJson</a>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        }</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a20220438e203305aa60401d4987dfaed">   49</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a38eb0e3fa00ecddcc7e3e6b5dfd01c10">launch</a>(<span class="keyword">const</span> std::string&amp; overrideArgs)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                Q_EMIT <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a7bbcbf224876cb9ef0d9dff0b71c966c">signalEntry</a>(std::string(overrideArgs));</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        }</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="code" href="classSysmgrBuiltinLaunchHelper.htm#aa9f25871a9c1845247c400bd6fb282f6">   53</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#aa9f25871a9c1845247c400bd6fb282f6">launchNoArgs</a>()</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                Q_EMIT <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a7bbcbf224876cb9ef0d9dff0b71c966c">signalEntry</a>(std::string(<span class="stringliteral">&quot;&quot;</span>));</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        Q_SIGNALS:</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <span class="keywordtype">void</span> <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a7bbcbf224876cb9ef0d9dff0b71c966c">signalEntry</a>(<span class="keyword">const</span> std::string&amp; argsAsStringEncodedJson);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a39818d74fa59723abe04ff20d1551558">   62</a></span>&#160;        std::string                                     <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a39818d74fa59723abe04ff20d1551558">m_builtIn_argsAsStringEncodedJson</a>;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;};</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm">   65</a></span>&#160;<span class="keyword">class </span><a class="code" href="classApplicationDescription.htm">ApplicationDescription</a> : <span class="keyword">public</span> <a class="code" href="classApplicationDescriptionBase.htm">ApplicationDescriptionBase</a></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740">   69</a></span>&#160;        <span class="keyword">enum</span> <a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740">Status</a> {</div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740ada17135afe330a81c81521ad9f276abd">   70</a></span>&#160;                <a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740ada17135afe330a81c81521ad9f276abd">Status_Ready</a> = 0,</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740a9242598fcb03fcd776ab77a02d6872fa">   71</a></span>&#160;                <a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740a9242598fcb03fcd776ab77a02d6872fa">Status_Updating</a>,</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740aa1aa4d6ad02985cf412907f0c70007b9">   72</a></span>&#160;                <a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740aa1aa4d6ad02985cf412907f0c70007b9">Status_Installing</a>,</div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740a3f3f596258b7b97ecd92ee622c821696">   73</a></span>&#160;                <a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740a3f3f596258b7b97ecd92ee622c821696">Status_Failed</a></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        };</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434">   76</a></span>&#160;        <span class="keyword">enum</span> <a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434">HardwareFeaturesNeeded</a> {</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434adf816f5785483025943198b708a4349a">   77</a></span>&#160;                <a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434adf816f5785483025943198b708a4349a">HardwareFeaturesNeeded_None</a>          = 0,</div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434ab066f2d36bdb6b3d6147cdf9bee363c3">   78</a></span>&#160;                <a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434ab066f2d36bdb6b3d6147cdf9bee363c3">HardwareFeaturesNeeded_Wifi</a>          = 1 &lt;&lt; 0,</div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434a139752ccfa059c290db9c284571927fa">   79</a></span>&#160;                <a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434a139752ccfa059c290db9c284571927fa">HardwareFeaturesNeeded_Bluetooth</a>     = 1 &lt;&lt; 1,</div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434aa0120cf1f8d5a5a17e281c15967a0cca">   80</a></span>&#160;                <a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434aa0120cf1f8d5a5a17e281c15967a0cca">HardwareFeaturesNeeded_Compass</a>       = 1 &lt;&lt; 2,</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434ab5f0b379b7d3436ee5aff57f6cfc89cf">   81</a></span>&#160;                <a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434ab5f0b379b7d3436ee5aff57f6cfc89cf">HardwareFeaturesNeeded_Accelerometer</a> = 1 &lt;&lt; 3,</div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434a7524d69fbafb9c740dc70396cad17aca">   82</a></span>&#160;                <a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434a7524d69fbafb9c740dc70396cad17aca">HardwareFeaturesNeeded_Last</a>          = 1 &lt;&lt; 31</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        };</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <a class="code" href="classApplicationDescription.htm#a908dce6688563745bb44425b11aa186f">ApplicationDescription</a>();</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <a class="code" href="classApplicationDescription.htm#a75cacd88da01b5bb46b79992543d5202">~ApplicationDescription</a>();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keyword">static</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* <a class="code" href="classApplicationDescription.htm#a52e623216e8762481e07fcbdd5ce610d">fromFile</a>(<span class="keyword">const</span> std::string&amp; filePath, <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#ab9d9b2464937e75e1acd40e6640d2376">folderPath</a>);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">static</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* <a class="code" href="classApplicationDescription.htm#a52d0ce463c3139f6099e03ce4e0fe6f3">fromJsonString</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* jsonStr);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keyword">static</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* <a class="code" href="classApplicationDescription.htm#abc6cfdb5680733ce488f2e9a554276ec">fromApplicationStatus</a>(<span class="keyword">const</span> <a class="code" href="structApplicationStatus.htm">ApplicationStatus</a>&amp; appStatus, <span class="keywordtype">bool</span> isUpdating);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keyword">static</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* <a class="code" href="classApplicationDescription.htm#a316114e821c8b3542771b9bb85662acc">fromNativeDockApp</a>(<span class="keyword">const</span> std::string&amp; <span class="keywordtype">id</span>, <span class="keyword">const</span> std::string&amp; title, </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                                <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#ae82d7e0f1bb6ad5c9f19bc0987767503">version</a>, <span class="keyword">const</span> std::string&amp; splashIcon,</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                                <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#a54683fe7210199d5cbcb2576a4729078">splashBackgroundName</a>, <span class="keyword">const</span> std::string&amp; miniicon,</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                                <span class="keyword">const</span> std::string&amp; vendor, <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#aef29163bfe406fb107d3f5edd0655825">vendorUrl</a>,</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                                                <span class="keyword">const</span> std::string&amp; appmenu);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keyword">static</span> std::string         <a class="code" href="classApplicationDescription.htm#abf9c412f66445fd75086da51d13c2966">versionFromFile</a>(<span class="keyword">const</span> std::string&amp; filePath, <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#ab9d9b2464937e75e1acd40e6640d2376">folderPath</a>);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        </div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a8eb4ba98ae50bcc974e0a2fef0355233">   98</a></span>&#160;        <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#a8eb4ba98ae50bcc974e0a2fef0355233">menuName</a>()<span class="keyword">           const </span>{ <span class="keywordflow">return</span> m_appmenuName; }</div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#ad8a1c91d1c7712793337225c5dc7d466">   99</a></span>&#160;        <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#ad8a1c91d1c7712793337225c5dc7d466">category</a>()<span class="keyword">   const </span>{ <span class="keywordflow">return</span> m_category; } </div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#aba1125d238890debe38fb6588bcee97b">  100</a></span>&#160;        std::list&lt;std::string&gt; <a class="code" href="classApplicationDescription.htm#aba1125d238890debe38fb6588bcee97b">keywords</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_keywords.allKeywords(); }</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#ae82d7e0f1bb6ad5c9f19bc0987767503">  101</a></span>&#160;        <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#ae82d7e0f1bb6ad5c9f19bc0987767503">version</a>()<span class="keyword">    const </span>{ <span class="keywordflow">return</span> m_version; }</div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a5ac8818aa25ec0a9eb916949c0d65645">  102</a></span>&#160;        <span class="keywordtype">bool</span>               <a class="code" href="classApplicationDescription.htm#a5ac8818aa25ec0a9eb916949c0d65645">hasTransparentWindows</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_hasTransparentWindows; }</div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a7074eb27a7de13c867b66993b6d5390c">  103</a></span>&#160;        <span class="keywordtype">bool</span>                       <a class="code" href="classApplicationDescription.htm#a7074eb27a7de13c867b66993b6d5390c">isRemovable</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_isRemovable; }</div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a8d81b81335960e56ddacec9c45d17c81">  104</a></span>&#160;    <span class="keywordtype">bool</span>               <a class="code" href="classApplicationDescription.htm#a8d81b81335960e56ddacec9c45d17c81">handlesRelaunch</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_handlesRelaunch; }</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a2a0b7c0f8e60cdc86d74baa393e980bf">  105</a></span>&#160;        <span class="keywordtype">bool</span>                       <a class="code" href="classApplicationDescription.htm#a2a0b7c0f8e60cdc86d74baa393e980bf">isUserHideable</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_isUserHideable; }</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#adde8ef577fd9265920ce8491d6784ac2">  106</a></span>&#160;        <span class="keywordtype">bool</span>                       <a class="code" href="classApplicationDescription.htm#adde8ef577fd9265920ce8491d6784ac2">isVisible</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_isVisible; }</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#ab9d9b2464937e75e1acd40e6640d2376">  107</a></span>&#160;        <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#ab9d9b2464937e75e1acd40e6640d2376">folderPath</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_folderPath; }</div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a306593528fd49e5e040f9c733b213c80">  108</a></span>&#160;        <a class="code" href="namespaceLinearMotionTransformTriggers.htm#a93fad55218d5754f249820516e32c766">Type</a>                       <a class="code" href="classApplicationDescription.htm#a306593528fd49e5e040f9c733b213c80">type</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_type; }</div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a4d98002d26db8b19a829ab3dcfe66423">  109</a></span>&#160;        <a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740">Status</a>                     <a class="code" href="classApplicationDescription.htm#a4d98002d26db8b19a829ab3dcfe66423">status</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_status; }</div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a56c45571bd03d340e7983443e2314c28">  110</a></span>&#160;        <span class="keywordtype">int</span>                        <a class="code" href="classApplicationDescription.htm#a56c45571bd03d340e7983443e2314c28">progress</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_progress; }</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a369c58be95e21a25c1da7adbc666b37e">  111</a></span>&#160;        <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#a369c58be95e21a25c1da7adbc666b37e">attributes</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_attributes; }</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a9359a2daf09b91a9826bc52a1a2c0523">  112</a></span>&#160;        <span class="keywordtype">bool</span>                       <a class="code" href="classApplicationDescription.htm#a9359a2daf09b91a9826bc52a1a2c0523">hasAccounts</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_hasAccounts; }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a5e052715fa480c674dc26c9a4638d43d">  114</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a5e052715fa480c674dc26c9a4638d43d">dockModeStatus</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_dockMode; }</div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a2e27064ef0ab568926ebdc081e61ac5e">  115</a></span>&#160;        <span class="keyword">const</span> std::string&amp;  <a class="code" href="classApplicationDescription.htm#a2e27064ef0ab568926ebdc081e61ac5e">dockModeTitle</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_dockModeTitle; }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        </div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a2599fc8b55bc347e8c99d1e212d54621">  117</a></span>&#160;        <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#a2599fc8b55bc347e8c99d1e212d54621">miniIconUrl</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_miniIconName;}</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a5e68ceb1b67299014f8e5ccdd2b82bc9">  118</a></span>&#160;        <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#a5e68ceb1b67299014f8e5ccdd2b82bc9">vendorName</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_vendorName;}</div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#aef29163bfe406fb107d3f5edd0655825">  119</a></span>&#160;        <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#aef29163bfe406fb107d3f5edd0655825">vendorUrl</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_vendorUrl;}</div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a9759f63b5e6d7bd7364c34a1f5ad29b6">  120</a></span>&#160;        uint64_t <a class="code" href="classApplicationDescription.htm#a9759f63b5e6d7bd7364c34a1f5ad29b6">appSize</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_appSize;}</div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#aae577bd63cf9aa36dd8e8034429ab570">  121</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#aae577bd63cf9aa36dd8e8034429ab570">setAppSize</a>(<span class="keyword">const</span> uint64_t&amp; s) { m_appSize = s;}</div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#aeefd8b5917aa95ab33126f6193702ee1">  122</a></span>&#160;        uint32_t <a class="code" href="classApplicationDescription.htm#aeefd8b5917aa95ab33126f6193702ee1">blockSize</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fsBlockSize; }</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a6346234461ad9f0c29c676d998b3625a">  123</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#a6346234461ad9f0c29c676d998b3625a">setBlockSize</a>(uint32_t s) { m_fsBlockSize = s;}</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a0dc4e35e9efa59b99548a260ae901e1e">  125</a></span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classApplicationDescription.htm#a0dc4e35e9efa59b99548a260ae901e1e">runtimeMemoryRequired</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_runtimeMemoryRequired;}</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        QPixmap <a class="code" href="classApplicationDescription.htm#a2af5b35050affe5fb6cadc2c697a424e">miniIcon</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a2183496b8a32826389b1a21916690a58">  129</a></span>&#160;        <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#a2183496b8a32826389b1a21916690a58">splashIconName</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                <span class="keywordflow">return</span> m_splashIconName;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a54683fe7210199d5cbcb2576a4729078">  132</a></span>&#160;    <span class="keyword">const</span> std::string &amp;<a class="code" href="classApplicationDescription.htm#a54683fe7210199d5cbcb2576a4729078">splashBackgroundName</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">return</span> m_splashBackgroundName;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a1651deb875ef84d82bc5b42eeda798b8">  136</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a1651deb875ef84d82bc5b42eeda798b8">launchInNewGroup</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">return</span> m_launchInNewGroup;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keyword">const</span> std::list&lt;ResourceHandler&gt;&amp; <a class="code" href="classApplicationDescription.htm#a207773027e3f405db963fe647d23d1d7">mimeTypes</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keyword">const</span> std::list&lt;RedirectHandler&gt;&amp; <a class="code" href="classApplicationDescription.htm#a5588b2f435623a0bc50470995cacc9bc">redirectTypes</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keyword">const</span> <a class="code" href="LaunchPoint_8h.htm#add3ace36d420f4c7f29f016edf84d80f">LaunchPointList</a>&amp;        <a class="code" href="classApplicationDescription.htm#af1461c90aadaccac63bdce29e351db7e">launchPoints</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordtype">void</span>                                              <a class="code" href="classApplicationDescription.htm#af1461c90aadaccac63bdce29e351db7e">launchPoints</a>(<a class="code" href="LaunchPoint_8h.htm#add3ace36d420f4c7f29f016edf84d80f">LaunchPointList</a>&amp; launchPointList);               <span class="comment">//copy version of launchPoints(). Useful for add/remove of stuff from the list</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordtype">void</span>               <a class="code" href="classApplicationDescription.htm#a6607741fc739e294e99f089292b50f74">addLaunchPoint</a>(<a class="code" href="classLaunchPoint.htm">LaunchPoint</a>* lp);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>* <a class="code" href="classApplicationDescription.htm#a71c378eea808a0b1aab6025adc676e85">findLaunchPoint</a>(<span class="keyword">const</span> std::string&amp; lpId);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>* <a class="code" href="classApplicationDescription.htm#a8be15e9020618fc3bfd7af25836e657e">getDefaultLaunchPoint</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordtype">void</span>               <a class="code" href="classApplicationDescription.htm#adf515fa57a3e178baeae6d970fd8ad49">removeLaunchPoint</a>(<span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>* lp);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="comment">// NOTE: it is the callers responsibility to json_object_put the return value   </span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        json_object* <a class="code" href="classApplicationDescription.htm#a961dda3d6920ea2dc8f3e1e5880e6941">toJSON</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        std::string <a class="code" href="classApplicationDescription.htm#a4bb79f7aaa7396ee048418e62ce3b366">toString</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a7f0123b36fd95c4a943c50c69574544b">  156</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a7f0123b36fd95c4a943c50c69574544b">canExecute</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !m_executionLock; }</div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a28fb2624f85e96267d51fac2f63b885a">  157</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#a28fb2624f85e96267d51fac2f63b885a">executionLock</a>(<span class="keywordtype">bool</span> xp=<span class="keyword">true</span>) { m_executionLock = xp;}</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a87c370f37ad87d118fa696ed9a3c9f6e">  159</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a87c370f37ad87d118fa696ed9a3c9f6e">isRemoveFlagged</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_flaggedForRemoval;}</div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#adac9f9d567c7c4c73d6296eb21327e91">  160</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#adac9f9d567c7c4c73d6296eb21327e91">flagForRemoval</a>(<span class="keywordtype">bool</span> rf=<span class="keyword">true</span>) { m_flaggedForRemoval = rf;}</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a9f7efb1444298b70c2ff710aa3a624bb">setRemovable</a>(<span class="keywordtype">bool</span> v=<span class="keyword">true</span>);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#ac3cf031b0c478241c5eb06537365cc4c">setVisible</a>(<span class="keywordtype">bool</span> v=<span class="keyword">true</span>);</div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a0ac04d9cd8a92ded1102cdac0de66b61">  163</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#a0ac04d9cd8a92ded1102cdac0de66b61">setVersion</a>(<span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#ae82d7e0f1bb6ad5c9f19bc0987767503">version</a>) { m_version = <a class="code" href="classApplicationDescription.htm#ae82d7e0f1bb6ad5c9f19bc0987767503">version</a>; }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a9c89abe341e26e4474c787b92f3487db">  165</a></span>&#160;        uint32_t <a class="code" href="classApplicationDescription.htm#a9c89abe341e26e4474c787b92f3487db">hardwareFeaturesNeeded</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_hardwareFeaturesNeeded; }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="comment">// NOTE: only applications which reside in ROM (/usr/palm/applications) </span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="comment">// should set this flag to true</span></div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#afcc89d211cd9a6db08d2cd0814c6a619">  169</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#afcc89d211cd9a6db08d2cd0814c6a619">setUserHideable</a>(<span class="keywordtype">bool</span> hideable) { m_isUserHideable = hideable; }</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#af6d818e191b62245b3ed44b533673295">  171</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#af6d818e191b62245b3ed44b533673295">setStatus</a>(<a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740">Status</a> newStatus) { m_status = newStatus; }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a225984a3894f3e24360ffd769a847b1c">  173</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#a225984a3894f3e24360ffd769a847b1c">setHasAccounts</a>(<span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a9359a2daf09b91a9826bc52a1a2c0523">hasAccounts</a>) { m_hasAccounts = <a class="code" href="classApplicationDescription.htm#a9359a2daf09b91a9826bc52a1a2c0523">hasAccounts</a>; }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#ae1e791cd9b878fb20196603d6622f126">  175</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#ae1e791cd9b878fb20196603d6622f126">tapToShareSupported</a>()<span class="keyword"> const  </span>{ <span class="keywordflow">return</span> m_tapToShareSupported; }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a714a2ad332df41bc983306a232196d84">operator==</a>(<span class="keyword">const</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>&amp; cmp) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a628a7b2e68401c05b7d76c7f7432d7e0">operator!=</a>(<span class="keyword">const</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>&amp; cmp) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#aef421ef3f36ffa14d08a22287b38bd97">strictCompare</a>(<span class="keyword">const</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>&amp; cmp) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#a827eaabf1a8345a8e2dddab9fafb02d7">update</a>(<span class="keyword">const</span> <a class="code" href="structApplicationStatus.htm">ApplicationStatus</a>&amp; appStatus, <span class="keywordtype">bool</span> isUpdating);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keywordtype">int</span>  <a class="code" href="classApplicationDescription.htm#a827eaabf1a8345a8e2dddab9fafb02d7">update</a>(<span class="keyword">const</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>&amp; appDesc);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordtype">bool</span>    <a class="code" href="classApplicationDescription.htm#aaf7ffd5cb01506c72028a55f41da8cf8">doesMatchKeywordExact</a>(<span class="keyword">const</span> gchar* keyword) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keywordtype">bool</span>    <a class="code" href="classApplicationDescription.htm#a6c240bb1626ec1ae763c57fb9cc2b674">doesMatchKeywordPartial</a>(<span class="keyword">const</span> gchar* keyword) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#affd3ee82ce5ce77df51af633527e91a2">getAppDescriptionString</a>(std::string &amp;descString) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#ad69137d98bd11a850ce550eb02a9b918">startSysmgrBuiltIn</a>(<span class="keyword">const</span> std::string&amp; jsonArgsString) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#ad69137d98bd11a850ce550eb02a9b918">startSysmgrBuiltIn</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#ada9b22cb77df1cf538e7de6779334c58">startSysmgrBuiltInNoArgs</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#afd3765397578ede2f509352188c0dcad">initSysmgrBuiltIn</a>(<a class="code" href="classQObject.htm">QObject</a> * pReceiver,<span class="keyword">const</span> std::string&amp; entrypt,<span class="keyword">const</span> std::string&amp; args);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno"><a class="code" href="classApplicationDescription.htm#a85d47bd7533d1f272c04e1bdfd809536">  196</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#a85d47bd7533d1f272c04e1bdfd809536">dbgSetProgressManually</a>(<span class="keywordtype">int</span> progv) { m_progress = progv; }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a0c7ab72b476e232f6ce274c057541c23">securityChecksVerified</a>();</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keyword">class </span>MimeRegInfo {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                MimeRegInfo() : stream(false) {}</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                <span class="comment">//FIXME: don&#39;t need this anymore; originally intended to have it handle deep copies from pointers but now it&#39;s just the same as the default copy constr.</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                MimeRegInfo(<span class="keyword">const</span> MimeRegInfo&amp; c) {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                        mimeType = c.mimeType;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                        extension = c.extension;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                        urlPattern = c.urlPattern;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                        scheme = c.scheme;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                        stream = c.stream;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                MimeRegInfo&amp; operator=(<span class="keyword">const</span> MimeRegInfo&amp; c) {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                        <span class="keywordflow">if</span> (<span class="keyword">this</span> == &amp;c)</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                                <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                        mimeType = c.mimeType;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                        extension = c.extension;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                        urlPattern = c.urlPattern;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                        scheme = c.scheme;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                        stream = c.stream;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                std::string mimeType;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                std::string extension;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                std::string urlPattern;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                std::string scheme;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                <span class="keywordtype">bool</span> stream;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        };</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">int</span>      utilExtractMimeTypes(<span class="keyword">struct</span> json_object * jsonMimeTypeArray,std::vector&lt;MimeRegInfo&gt;&amp; extractedMimeTypes);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        std::string                     m_category;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        std::string                     m_version;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        std::list&lt;ResourceHandler&gt;      m_mimeTypes;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        std::list&lt;RedirectHandler&gt;      m_redirectTypes;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <a class="code" href="LaunchPoint_8h.htm#add3ace36d420f4c7f29f016edf84d80f">LaunchPointList</a>                 m_launchPoints;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        std::string                                     m_splashIconName;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        std::string                                     m_splashBackgroundName;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        std::string                                     m_miniIconName;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keywordtype">bool</span>                            m_hasTransparentWindows;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        std::string                     m_folderPath;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keywordtype">bool</span>                                            m_executionLock;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordtype">bool</span>                                            m_flaggedForRemoval;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="keywordtype">bool</span>                                            m_isRemovable;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keywordtype">bool</span>                                            m_isUserHideable;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordtype">int</span>                                                     m_progress;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordtype">bool</span>                                            m_isVisible;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        uint32_t                                        m_hardwareFeaturesNeeded;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <a class="code" href="namespaceLinearMotionTransformTriggers.htm#a93fad55218d5754f249820516e32c766">Type</a>                                            m_type;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740">Status</a>                                          m_status;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordtype">bool</span>                                            m_hasAccounts;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordtype">bool</span>                                            m_launchInNewGroup;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keywordtype">bool</span>                                            m_tapToShareSupported;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keywordtype">bool</span>                        m_handlesRelaunch;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="comment">// Dock Mode parameters</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordtype">bool</span>                                            m_dockMode;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        std::string                                     m_dockModeTitle;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        std::string                 m_attributes;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        std::string                                     m_vendorName;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        std::string                                     m_vendorUrl;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        uint64_t                                        m_appSize;                      </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        uint32_t                                        m_fsBlockSize;          </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>                            m_runtimeMemoryRequired; <span class="comment">// Amount (in MB) of RAM the application expects to use during runtime</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        std::string                                     m_appmenuName;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        KeywordMap                                      m_keywords;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        std::string                             m_universalSearchJsonStr;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        std::string                                     m_servicesJsonStr;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        std::string                                     m_accountsJsonStr;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="comment">// if type == SysmgrBuiltin</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <a class="code" href="classSysmgrBuiltinLaunchHelper.htm">SysmgrBuiltinLaunchHelper</a> *             m_pBuiltin_launcher;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordtype">void</span> updateSysmgrBuiltinWithLocalization();</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;};      </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* APPLICATIONDESCRIPTION_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_26332aa2644dbe93fe6f8b280178253c.htm">luna-sysmgr</a></li><li class="navelem"><a class="el" href="dir_8c5e5096bb729179ac3532fcf9eeb777.htm">Src</a></li><li class="navelem"><a class="el" href="dir_464f84f5da23097a678db14a336cf9f8.htm">base</a></li><li class="navelem"><a class="el" href="dir_1e11d809bd72c8e09b801d2aa6342677.htm">application</a></li><li class="navelem"><a class="el" href="ApplicationDescription_8h.htm">ApplicationDescription.h</a></li>
    <li class="footer">Generated on Fri Jun 21 2013 00:53:53 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
